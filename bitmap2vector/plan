while detecting the control points form an adjacenncy list of vertices==pixels with white color
the vertices properties must contatin:
	isControlPt
	isIslandPt
	isUsedUpInformingDisjointPiece
only white pixels are connected to each other
isControlpt will be filled up while detecting control points

Now we have already found the line segments from one control point to another

after that find out island points by iterating over the adjacency list,
	start from each node
	go on in all directions 
	if you don't encounter any control point in the path and you get back to your original point then thats an island
	fill isIslandPt accordingly

Now we can create a list of disjoint line segments of two type
	control point to control point
	island point to itself

Then we optimize these line segments and store them in another list of optimized line segments 
and create a list of string of svg paths of these line segments

Then we need to form a list of regions 
	each region must have the following properties
		list of string of svg paths that surround that region
		color of one pixel of that region 

Now we simply need to print each region with stroke width = 0 and fill color as the pixel color of that region


white vertex
id
isControlPt
isIslandPt
controlPtColNum


Rebordering Plan
create a function to reverse a path without changing its configuration
for each region create a closed path string out of the optimized paths
	- the trick to join will be:
		since the end points of a path and the start point of the next path of the region will either be one to two pixels 
		make a line from the end point to the start point and then draw the usual path.
		print these combined paths with tags and fill color